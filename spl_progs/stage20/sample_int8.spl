breakpoint;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 8;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] = SP;
alias userSP R1;

userSP = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1]*16 + 11]*512 -1 ;
multipush(R1);
R1 = 1;
call MOD_1;
multipop(R1);

alias chiPID R2;
chiPID = R0;

if(chiPID == -1)then

[([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = -1;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
ireturn;

endif;

if([PTBR + 4] == -1)then
  multipush(R1,R2);
  R1 = 1;
  call MOD_2;
  [PTBR + 4] = R0;
  [PTBR + 5] = "0110";
  multipop(R1,R2);

  multipush(R1,R2);
  R1 = 1;
  call MOD_2;
  [PTBR + 6] = R0;
  [PTBR + 7] = "0110";
  multipop(R1,R2);

endif;

multipush(R1,R2);
R1 = 1;
call MOD_2;
R3 = R0;
multipop(R1,R2);
[PAGE_TABLE_BASE + chiPID*20 + 16] = R0;
[PAGE_TABLE_BASE + chiPID*20 + 17] = "0110";

multipush(R1,R2);
R1 = 1;
call MOD_2;
R3 = R0;
multipop(R1,R2);
[PAGE_TABLE_BASE + chiPID*20 + 18] = R0;
[PAGE_TABLE_BASE + chiPID*20 + 19] = "0110";

multipush(R1,R2);
R1 = 1;
call MOD_2;
R3 = R0;
multipop(R1,R2);
[PROCESS_TABLE + chiPID*16 + 11] = R0;

[PROCESS_TABLE + chiPID*16 + 3] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 3];
[PROCESS_TABLE + chiPID*16 + 6] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 6];
[PROCESS_TABLE + chiPID*16 + 10] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 10];
[PROCESS_TABLE + chiPID*16 + 7] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 7];
[PROCESS_TABLE + chiPID*16 + 13] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];

[PROCESS_TABLE + chiPID*16 +  9] = 0;
[PROCESS_TABLE + chiPID*16 + 12] = 0;
[PROCESS_TABLE + chiPID*16 +  0] = 0;
[PROCESS_TABLE + chiPID*16 +  2] = [SYSTEM_STATUS_TABLE + 1];
[PROCESS_TABLE + chiPID*16 +  4] = CREATED;

alias i R3;
i = 496;
while(i<512)do
  [[PROCESS_TABLE + chiPID*16 + 11]*512 + i]    =  [[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 + i];


i = i+1;
endwhile;

i = 0;
while(i<10)do
 [DISK_MAP_TABLE + chiPID*10 + i] = [DISK_MAP_TABLE + [SYSTEM_STATUS_TABLE + 1]*10 + i];
 
i=i+1;
endwhile;
[DISK_MAP_TABLE + chiPID*10 + 0] = -1; 
[DISK_MAP_TABLE + chiPID*10 + 1] = -1;
[DISK_MAP_TABLE + chiPID*10 + 8] = -1;
[DISK_MAP_TABLE + chiPID*10 + 9] = -1;


i = 0;

while(i<8)do

[PAGE_TABLE_BASE + chiPID*20 + i*2] = [PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + i*2];
[PAGE_TABLE_BASE + chiPID*20 + i*2 +1] = [PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + i*2 +1];

[MEMORY_FREE_LIST + [PAGE_TABLE_BASE + chiPID*20 + i*2]] = [MEMORY_FREE_LIST + [PAGE_TABLE_BASE + chiPID*20 + i*2]] + 1;
i = i+1;
endwhile;

i = 0;
while(i<512)do
 [[PAGE_TABLE_BASE + chiPID*20 + 16]*512 + i] = [[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + 16]*512 + i];
[[PAGE_TABLE_BASE + chiPID*20 + 18]*512 + i] = [[PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1]*20 + 18]*512 + i];

i = i+1;
endwhile;


[[PROCESS_TABLE + chiPID*16 +  11]*512] = BP;

[([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = chiPID;
[([PAGE_TABLE_BASE + chiPID*20 + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = 0;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 9] = 0;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13];
breakpoint;
ireturn;
