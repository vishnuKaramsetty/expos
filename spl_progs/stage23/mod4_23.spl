
alias functionNum R1;
alias currentPID R2;
alias pagenum R3;
alias blocknum R4;
     if(functionNum == 1)then
         multipush(R0,R1,R2,R3,R4,R5,R6);
         R1 = 3;
         R2 = [SYSTEM_STATUS_TABLE + 1];
         call MOD_0;
         multipop(R0,R1,R2,R3,R4,R5,R6);

         [DISK_STATUS_TABLE] = 1; 
         [DISK_STATUS_TABLE + 1] = 1;
         [DISK_STATUS_TABLE + 2] = pagenum;
         [DISK_STATUS_TABLE + 3] = blocknum;
         [DISK_STATUS_TABLE + 4] = [SYSTEM_STATUS_TABLE + 1];
         store(pagenum,blocknum);
         [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_DISK;
         multipush(R0,R1,R2,R3,R4,R5);
         call MOD_5;
         multipop(R0,R1,R2,R3,R4,R5);
         return;
       endif;   

          if(functionNum == 2)then
              multipush(R0,R1,R2,R3,R4);
              functionNum = 3;
                  call MOD_0;
              multipop(R0,R1,R2,R3,R4);
              [DISK_STATUS_TABLE + 1] = 0;
              [DISK_STATUS_TABLE + 2] = pagenum;
              [DISK_STATUS_TABLE + 3] = blocknum;
              load(pagenum,blocknum);
              [PROCESS_TABLE + currentPID*16 + 4] = WAIT_DISK;     
              multipush(R0,R1,R2,R3,R4);
                   call MOD_5;
              multipop(R0,R1,R2,R3,R4);
              return;         
          endif;
          if(functionNum == 3)then
              multipush(R0,R1,R2,R3);
              functionNum = 8;
                  call MOD_0;
              multipop(R0,R1,R2,R3);
              print R3;
              multipush(R0,R1,R2,R3);
              functionNum = 9;
                  call MOD_0;
              R4 = R0;
              multipop(R0,R1,R2,R3);
              
               return;
          endif;


          if(functionNum == 4)then
               multipush(R0,R1,R2,R3);
               functionNum =8;
               call MOD_0;
               multipop(R0,R1,R2,R3);
               read;
               [PROCESS_TABLE + currentPID*16 + 4] = WAIT_TERMINAL;
              // breakpoint;
               multipush(R0,R1,R2,R3);
               call MOD_5;
               multipop(R0,R1,R2,R3);
               alias word_address R3;               
              [([PTBR + 2*(word_address/512)]*512) + (word_address%512)] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 8];
               return;

           else
              return;
            endif;
