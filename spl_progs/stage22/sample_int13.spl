alias syscall R1;
syscall = [([PTBR + 2*((SP-5)/512)]*512) + ((SP-5)%512)];

if(syscall == 17)then
  [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 17;
  [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = SP;
  alias userSP R2;
  userSP = SP;
  SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 -1;
  alias i R3;
  alias j R4;
  j = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 + 496;
  i = 0;

  while(i<8)do
   if([j] == -1)then
      break;
    endif;
  i = i+1;
  j = j+2;
  endwhile;

  if(i == 8)then
     [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
     SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
     [([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = -1;
     ireturn;
  endif;

  multipush(R1,R2,R3,R4);
  R1 = 6;
  R2 = [SYSTEM_STATUS_TABLE + 1];
  call MOD_0;
  R5 = R0;
  multipop(R1,R2,R3,R4);

  if(R5 == -1)then
     [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
     SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
     [([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = -2;
     ireturn;
  endif;

  [j] = 1;
  [j + 1] = R5;
  [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
  SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
  [([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = i;
  ireturn;
endif;

if(syscall == 18)then
   [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 18;
   [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13] = SP;
   alias userSP R2;
   userSP = SP;
   SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 -1;
   alias semid R3;
   semid = [([PTBR + 2*((userSP-4)/512)]*512) + ((userSP-4)%512)];
   alias perprocess R4;
   perprocess = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11]*512 + 496;

   if((semid<0) || (semid>7) ||( [perprocess + 2*semid] != 1 ))then
      [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
      SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
      [([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = -1;
      ireturn;
   endif;
   multipush(R1,R2,R3,R4);
   R1 = 7;
   R2 = [SYSTEM_STATUS_TABLE +1];
   R3 = semid;
   call MOD_0;
   multipop(R1,R2,R3,R4);
   [perprocess + 2*semid] = -1;
   [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 9] = 0;
   SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13];
   [([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512)] = 0;
   ireturn;
endif;

