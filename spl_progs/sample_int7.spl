[PROCESS_TABLE +([SYSTEM_STATUS_TABLE+1]*16) + 9] = 5;
alias usersp R0;
usersp = SP;
[PROCESS_TABLE +([SYSTEM_STATUS_TABLE+1]*16) + 13] = SP;
SP = [PROCESS_TABLE +[SYSTEM_STATUS_TABLE+1]*16 + 11]*512 -1;

alias physicalpgno R1;
alias offset R2;
alias physicaladdress R3;
alias filedescriptor R4;

physicalpgno = [PTBR + 2*((usersp-4)/512)];
offset = (usersp-4)%512;
physicaladdress = (physicalpgno*512) + offset;
filedescriptor = [physicaladdress];

if(filedescriptor != -2)
then

alias physicalretval R5;
physicalretval = ([PTBR + 2*((usersp-1)/512)]*512)+ ((usersp-1)%512);
[physicalretval] = -1;

else
alias word R5;
word = [[PTBR + 2*((usersp-3)/512)]*512 + ((usersp-3)%512)];




multipush(R0,R1,R2,R3,R4,R5);
R1 = 3;
R2 = [SYSTEM_STATUS_TABLE+1];
R3 = word;
call MOD_4;
multipop(R0,R1,R2,R3,R4,R5);



alias physicalretval R6;
physicalretval = ([PTBR + 2*((usersp-1)/512)]*512)+ ((usersp-1)%512);
[physicalretval] = 0; 

endif;

SP = usersp;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;


ireturn;
